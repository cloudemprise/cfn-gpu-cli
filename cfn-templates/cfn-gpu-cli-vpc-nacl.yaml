---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Network Security Defense-In-Depth.

  A Restricted Public Subnet Network Access Control List.
  A Restricted Private Subnet Network Access Control List.
  Ingress & Egress Definitions.

  Private subnets can only be access via a Bastion Host on Public subnets.

# ------------------------------------------


# ==========================================
Metadata: {}
# Metadata:


# ==========================================
# Parameters {}
Parameters:

  # ------------------------------------------
  # --- The Project Name
  ProjectName:
    Description: "The Name given to this Project."
    ConstraintDescription: "Must satisfy S3 constraints."
    Type: String
    Default: "cfn-gpu-cli"
    MinLength: 3
    MaxLength: 11
    AllowedPattern: ^[a-zA-Z0-9.\-_]{1,255}$

  # ------------------------------------------
  # --- AWS-Specific Parameter Types
  VPCID:
    Description: "VPC to create the NACL into"
    Type: "AWS::EC2::VPC::Id"
  # ------------------------------------------
  PublicSubnetIdA:
    Description: "Public Subnet ID AZ-A"
    Type: "AWS::EC2::Subnet::Id"
  # ------------------------------------------
  PublicSubnetIdB:
    Description: "Public Subnet ID AZ-B"
    Type: "AWS::EC2::Subnet::Id"
  # ------------------------------------------
  PublicSubnetIdC:
    Description: "Public Subnet ID AZ-C"
    Type: "AWS::EC2::Subnet::Id"
  # ------------------------------------------
  PrivateSubnetIdA:
    Description: "Private Subnet ID AZ-A"
    Type: "AWS::EC2::Subnet::Id"
  # ------------------------------------------
  PrivateSubnetIdB:
    Description: "Private Subnet ID AZ-B"
    Type: "AWS::EC2::Subnet::Id"
  # ------------------------------------------
  PrivateSubnetIdC:
    Description: "Private Subnet ID AZ-C"
    Type: "AWS::EC2::Subnet::Id"


# ==========================================
Conditions: {}
# Conditions:


# ==========================================
Resources:

  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         NACL DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  # ------------------------------------------
  # --- Public NACL & Subnet Associations
  PublicNAcl:
    Type: "AWS::EC2::NetworkAcl"
    # .............................
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: "Name"
          Value:
            !Sub "${ProjectName}-PubNacl"
  # ------------------------------------------
  PublicSubetNAclAssociationA:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      SubnetId: !Ref PublicSubnetIdA
  # ------------------------------------------
  PublicSubetNAclAssociationB:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      SubnetId: !Ref PublicSubnetIdB
  # ------------------------------------------
  PublicSubetNAclAssociationC:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      SubnetId: !Ref PublicSubnetIdC


  # ------------------------------------------
  # --- Private NACL & Subnet Associations
  PrivateNAcl:
    Type: "AWS::EC2::NetworkAcl"
    # .............................
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: "Name"
          Value:
            !Sub "${ProjectName}-PrivNacl"
  # ------------------------------------------
  PrivateSubetNAclAssociationA:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      SubnetId: !Ref PrivateSubnetIdA
  # ------------------------------------------
  PrivateSubetNAclAssociationB:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      SubnetId: !Ref PrivateSubnetIdB
  # ------------------------------------------
  PrivateSubetNAclAssociationC:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      SubnetId: !Ref PrivateSubnetIdC


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         Public NACL DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- Web Access for nlb health checks
  # PublicNAclIngress01:
    # Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    # Properties:
      # NetworkAclId: !Ref PublicNAcl
      # Egress: false
      # RuleNumber: 1
      # Protocol: 6
      # RuleAction: "allow"
      # CidrBlock: "0.0.0.0/0"
      # PortRange:
        # From: 80
        # To: 80

  # ------------------------------------------
  # --- Ingress Public NACL Group
  PublicNAclIngress10:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 10
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      PortRange:
        From: 80
        To: 80
  # ------------------------------------------
  PublicNAclIngress11:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 11
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      PortRange:
        From: 443
        To: 443
  # ------------------------------------------
  PublicNAclIngress50:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 50
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 22
        To: 22
  # ------------------------------------------
  PublicNAclIngress60:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 60
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 3389
        To: 3389
  # ------------------------------------------
  PublicNAclIngress61:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 61
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 8443
        To: 8443
  # ------------------------------------------
  PublicNAclIngress62:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 62
      Protocol: 17
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 8443
        To: 8443
  # ------------------------------------------
  PublicNAclIngress63:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 63
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PublicNAclIngress64:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 64
      Protocol: 17
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PublicNAclIngress70:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 70
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      Icmp:
        Type: 8
        Code: -1
  # ------------------------------------------
  PublicNAclIngress71:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 71
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      Icmp:
        Type: 0
        Code: -1
  # ------------------------------------------
  PublicNAclIngress100:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: false
      RuleNumber: 100
      Protocol: -1
      RuleAction: "deny"
      CidrBlock: "0.0.0.0/0"


  # ------------------------------------------
  # --- Egress Public NACL Group
  PublicNAclEgress10:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 10
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      PortRange:
        From: 22
        To: 22
  # ------------------------------------------
  PublicNAclEgress50:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 50
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 80
        To: 80
  # ------------------------------------------
  PublicNAclEgress51:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 51
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 443
        To: 443
  # ------------------------------------------
  PublicNAclEgress52:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 52
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 22
        To: 22
  # ------------------------------------------
  PublicNAclEgress53:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 53
      Protocol: 17
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 53
        To: 53
  # ------------------------------------------
  PublicNAclEgress54:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 54
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 53
        To: 53
  # ------------------------------------------
  PublicNAclEgress55:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 55
      Protocol: 17
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 123
        To: 123
  # ------------------------------------------
  PublicNAclEgress60:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 60
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PublicNAclEgress61:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 61
      Protocol: 17
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PublicNAclEgress70:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 70
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      Icmp:
        Type: 8
        Code: -1
  # ------------------------------------------
  PublicNAclEgress71:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 71
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      Icmp:
        Type: 0
        Code: -1
  # ------------------------------------------
  PublicNAclEgress100:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PublicNAcl
      Egress: true
      RuleNumber: 100
      Protocol: -1
      RuleAction: "deny"
      CidrBlock: "0.0.0.0/0"


  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #         Private NACL DEFINITIONS
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  # ------------------------------------------
  # --- Ingress Private NACL Group
  PrivateNAclIngress10:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: false
      RuleNumber: 10
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      PortRange:
        From: 22
        To: 22
  # ------------------------------------------
  PrivateNAclIngress30:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: false
      RuleNumber: 30
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      Icmp:
        Type: -1
        Code: -1
  # ------------------------------------------
  PrivateNAclIngress60:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: false
      RuleNumber: 60
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PrivateNAclIngress100:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: false
      RuleNumber: 100
      Protocol: -1
      RuleAction: "deny"
      CidrBlock: "0.0.0.0/0"

  # ------------------------------------------
  # --- Egress Private NACL Group
  PrivateNAclEgress20:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: true
      RuleNumber: 20
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      PortRange:
        From: 1024
        To: 65535
  # ------------------------------------------
  PrivateNAclEgress30:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: true
      RuleNumber: 30
      Protocol: 1
      RuleAction: "allow"
      CidrBlock: "10.0.0.0/16"
      Icmp:
        Type: -1
        Code: -1
  # ------------------------------------------
  PrivateNAclEgress50:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: true
      RuleNumber: 50
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 80
        To: 80
  # ------------------------------------------
  PrivateNAclEgress51:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: true
      RuleNumber: 51
      Protocol: 6
      RuleAction: "allow"
      CidrBlock: "0.0.0.0/0"
      PortRange:
        From: 443
        To: 443
  # ------------------------------------------
  PrivateNAclEgress100:
    Type: "AWS::EC2::NetworkAclEntry"
    # .............................
    Properties:
      NetworkAclId: !Ref PrivateNAcl
      Egress: true
      RuleNumber: 100
      Protocol: -1
      RuleAction: "deny"
      CidrBlock: "0.0.0.0/0"


# ==========================================
Outputs: {}
# Outputs:
